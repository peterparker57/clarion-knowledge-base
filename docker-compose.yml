version: '3.8'

services:
  # Qdrant Vector Database Service
  qdrant:
    image: qdrant/qdrant:latest
    container_name: clarion-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC API
    volumes:
      - clarion_qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 10  # More retries to handle slower systems
      start_period: 120s  # Allow time for snapshot restore and initialization (21,747 chunks)
    restart: unless-stopped
    networks:
      - clarion-network

  # MCP Server Service
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clarion-mcp-server
    depends_on:
      qdrant:
        condition: service_healthy
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - COLLECTION_NAME=clarion_docs
    volumes:
      # Mount source code for development (optional - comment out for production)
      - ./src:/app/src:ro
      # Mount processed data (optional - for regenerating if needed)
      - ./data/processed:/app/data/processed:ro
      - ./scripts:/app/scripts:ro
      - ./qdrant-snapshot.tar.gz:/app/qdrant-snapshot.tar.gz:ro
    networks:
      - clarion-network
    restart: unless-stopped
    # Keep container running (MCP server runs on-demand via docker exec)
    command: tail -f /dev/null
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  clarion-network:
    driver: bridge

volumes:
  clarion_qdrant_data:
    driver: local
