version: '3.8'

# Docker Compose add-on for MCP users who want to add the web app
# This file assumes you already have Clarion MCP installed and running.
#
# Usage:
#   docker-compose -f docker-compose-webapp-addon.yml up -d
#
# Requirements:
#   - Existing clarion-qdrant container must be running
#   - Existing clarion-network must exist
#   - Existing clarion_qdrant_data volume must exist

services:
  # Clarion Knowledge Base Web App (connects to existing Qdrant)
  web-app:
    image: clarionlive/clarion-knowledge-base-webapp:latest
    container_name: clarion-web-app
    ports:
      - "${CLARION_WEB_PORT:-8080}:8080"  # Web interface (customizable via CLARION_WEB_PORT env var)
    environment:
      # Connect to existing Qdrant container from MCP installation
      - QDRANT_HOST=clarion-qdrant
      - QDRANT_PORT=6333
      - COLLECTION_NAME=clarion_docs
      # Encryption key for API key storage (DO NOT CHANGE after first use!)
      - ENCRYPTION_KEY=yFf7iOiJAhMwF6XO6iRCFkPOLRZnzknWcwdQmSGumpY=
      # Optional: Pre-configure API keys via environment variables
      # - DEEPSEEK_API_KEY=sk-your-key-here
      # - OPENAI_API_KEY=sk-your-key-here
      # - ANTHROPIC_API_KEY=sk-your-key-here
      # - GEMINI_API_KEY=your-key-here
      # - GROK_API_KEY=your-key-here
    volumes:
      - api_keys:/app/.secrets  # Encrypted API key storage
    networks:
      - clarion-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s  # Allow time for embedding model to load (~80MB) and Qdrant connection

# Use existing network from MCP installation
networks:
  clarion-network:
    external: true
    name: clarion-network

# Web app needs its own volume for API keys (Qdrant volume already exists from MCP)
volumes:
  api_keys:
    driver: local
